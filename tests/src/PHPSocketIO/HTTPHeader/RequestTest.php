<?php

namespace PHPSocketIO\HTTPHeader;

class RequestTestObject extends Request
{

    public function __construct($rawHeader)
    {

    }

    public function parseMethodTest($line)
    {
        $this->parseMethod($line);
    }

}

/**
 * Test class for Request.
 * Generated by PHPUnit on 2013-05-30 at 13:37:50.
 */
class RequestTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var RequestTestObject
     */
    protected $object;

    public function header_method_test_case()
    {
        return array(
            array(
                'source' => 'GET   /  HTTP/1.1',
                'method' => 'GET',
                'doc'    => '/',
                'uri'    => '/',
                'params' => null,
                'protocol' => 'HTTP',
                'protocol_version' => '1.1'
            ),
            array(
                'source' => 'POST /test?param1=1&param2=2 HTTP/1.0',
                'method' => 'POST',
                'doc'    => '/test',
                'uri'    => '/test?param1=1&param2=2',
                'params' => array(
                    'param1' => '1',
                    'param2' => '2',
                ),
                'protocol' => 'HTTP',
                'protocol_version' => '1.0'
            ),
        );
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new RequestTestObject("");
    }


    /**
     * @dataProvider header_method_test_case
     */
    public function testParseMethod($source, $method, $doc, $uri, $params, $protocol, $protocol_version)
    {
        $this->object->parseMethodTest($source);
        $this->assertEquals($method, $this->object->getMethod());
        $this->assertEquals($doc, $this->object->getDoc());
        $this->assertEquals($uri, $this->object->getUri());
        $this->assertEquals($params, $this->object->getParams());
        $this->assertEquals($protocol, $this->object->getProtocol());
        $this->assertEquals($protocol_version, $this->object->getProtocolVersion());
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

}

?>
